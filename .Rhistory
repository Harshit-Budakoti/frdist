}
LessthanCF <- function(col3) {LessCF={}
for (j in 1:length(col3)){LessCF[j]<-sum(col3[1:j]);LessCF}
return(LessCF)
}
h=classwidth(col1,col2)
x=classmarks(col1,col2)
MTCF=MorethanCF(col3)
LTCF=LessthanCF(col3)
table=data.frame(LL=col1,UL=col2,classmark=x,freq=col3,morecf=MTCF,lesscf=LTCF)
print(table)
sprintf("CLASS WIDTH= %d",h)
plot(main = "Less than and More Than Ogive Plots",col2,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=(min(col1):max(col2)),
ylim=(0:max(LTCF)))
lines(col1,MTCF,pch=3,lwd=3,col=2);
}
basicfreqdist(col1,col2,col3)
basicfreqdist<-function(col1,col2,col3){
classwidth<- function(col1,col2){
h=col2[1]-col1[1]
return(h)
}
classmarks<- function(col1,col2){
x=(col1+col2)/2
return(x)
}
MorethanCF <- function(col3) {MoreCF={}
for (i in 1:length(col3)){MoreCF[i]<-sum(col3[i:length(col3)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(col3) {LessCF={}
for (j in 1:length(col3)){LessCF[j]<-sum(col3[1:j]);LessCF}
return(LessCF)
}
h=classwidth(col1,col2)
x=classmarks(col1,col2)
MTCF=MorethanCF(col3)
LTCF=LessthanCF(col3)
table=data.frame(LL=col1,UL=col2,classmark=x,freq=col3,morecf=MTCF,lesscf=LTCF)
print(table)
sprintf("CLASS WIDTH= %d",h)
plot(main = "Less than and More Than Ogive Plots",col2,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=c(min(col1):max(col2)),
ylim=(0:max(LTCF)))
lines(col1,MTCF,pch=3,lwd=3,col=2);
}
basicfreqdist(col1,col2,col3)
basicfreqdist<-function(col1,col2,col3){
classwidth<- function(col1,col2){
h=col2[1]-col1[1]
return(h)
}
classmarks<- function(col1,col2){
x=(col1+col2)/2
return(x)
}
MorethanCF <- function(col3) {MoreCF={}
for (i in 1:length(col3)){MoreCF[i]<-sum(col3[i:length(col3)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(col3) {LessCF={}
for (j in 1:length(col3)){LessCF[j]<-sum(col3[1:j]);LessCF}
return(LessCF)
}
h=classwidth(col1,col2)
x=classmarks(col1,col2)
MTCF=MorethanCF(col3)
LTCF=LessthanCF(col3)
table=data.frame(LL=col1,UL=col2,classmark=x,freq=col3,morecf=MTCF,lesscf=LTCF)
print(table)
sprintf("CLASS WIDTH= %d",h)
plot(main = "Less than and More Than Ogive Plots",col2,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',
ylim=(0:max(LTCF)))
lines(col1,MTCF,pch=3,lwd=3,col=2);
}
basicfreqdist(col1,col2,col3)
basicfreqdist<-function(col1,col2,col3){
basicfreqdist<-function(col1,col2,col3){
basicfreqdist(col1,col2,col3)
library(freqdistributionandogives)
basicfreqdist<-function(col1,col2,col3){
library(freqdistributionandogives)
library(freqdistributionandogives)
library(freqdistributionandogives)
library(freqdistributionandogives)
rm -Rf C:/Users/budak/AppData/Local/Temp/Rtmp29NX5V/Rd2pdfd806429329c
'rm -Rf C:/Users/budak/AppData/Local/Temp/Rtmp29NX5V/Rd2pdfd806429329c'
library(freqdistributionandogives)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
sprintf("CLASS WIDTH= %d",h)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2);
}
basicfreqdist(col1,col2,col3)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
basicfreqdist(col1,col2,col3)
basicfreqdist(col1,col2,col3=c(1,2,3,4,5))
col3;
f=c(4,10,24,2,33)
basicfreqdist(col1,col2,f)
f=c(4,8,16,32,64)
basicfreqdist(col1,col2,f)
f=c(4,30,23,19,4)
basicfreqdist(col1,col2,f)
library(freqdistributionandogives)
#' Creates a frequency distribution table and automated ogives plot
#' @export
#' @param lower_Class_limit numeric variable
#' @param upper_Class_limit numeric variable
#' @param freq numeric varialbe
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
par(mfrow=c(1,1))
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
par(mfrow=c(1,2))
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
basicfreqdist(col1,col2,col3)
#' Creates a frequency distribution table and automated ogives plot
#' @export
#' @param lower_Class_limit numeric variable
#' @param upper_Class_limit numeric variable
#' @param freq numeric varialbe
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
par(mfrow=c(1,1))
data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
par(mfrow=c(1,2))
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
basicfreqdist(col1,col2,col3)
#' Creates a frequency distribution table and automated ogives plot
#' @export
#' @param lower_Class_limit numeric variable
#' @param upper_Class_limit numeric variable
#' @param freq numeric varialbe
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
par(mfrow=c(1,1))
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
par(mfrow=c(1,1))
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
basicfreqdist(col1,col2,col3)
library(freqdistributionandogives)
library(freqdistributionandogives)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)));lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
plot(col3);
plot(col3,'o');
plot(col3,'l');
plot(col2,cumsum(col3),'l');
plot(col2,cumsum(col3),'l')
lines(col1)
lines(col1,col1)
lines(col1,0)
plot(col2,cumsum(col3),'l')lines(col3)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
basicfreqdist(col1,col2,col3)
library(freqdistributionandogives)
library(freqdistributionandogives)
install.packages("tinytex")
tinytex::install_prebuilt()
library(freqdistributionandogives)
R CMD check package --no-manual
R CMD check package --no-manual
library(freqdistributionandogives)
library(freqdistributionandogives)
'C:/Users/budak/OneDrive/Documents/freqdistributionandogives.Rcheck/00check.log'
C:/Users/budak/OneDrive/Documents/freqdistributionandogives.Rcheck/00check.log
library(freqdistributionandogives)
library(freqdistributionandogives)
library(freqdistributionandogives)
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"), "C:\\Users\\budak\\anaconda3\\Scripts;C:\\Users\\budak\\anaconda3;C:\\Program Files\\R\\R-4.1.2\\bin\\x64;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;%SystemRoot%\\system32;%SystemRoot%;%SystemRoot%\\System32\\Wbem;%SYSTEMROOT%\\System32\\WindowsPowerShell\\v1.0\\;%SYSTEMROOT%\\System32\\OpenSSH\\;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin\\;C:\\Users\\budak\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\budak\\AppData\\Local\\GitHubDesktop\\bin"
,sep=";"))
Sys.setenv(PATH=paste(Sys.getenv("PATH"), "C:\\Users\\budak\\anaconda3\\Scripts;C:\\Users\\budak\\anaconda3;C:\\Program Files\\R\\R-4.1.2\\bin\\x64;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;%SystemRoot%\\system32;%SystemRoot%;%SystemRoot%\\System32\\Wbem;%SYSTEMROOT%\\System32\\WindowsPowerShell\\v1.0\\;%SYSTEMROOT%\\System32\\OpenSSH\\;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin\\;C:\\Users\\budak\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\budak\\AppData\\Local\\GitHubDesktop\\bin",sep=";"))
library(freqdistributionandogives)
R CMD Rd2pdf mypackage
R CMD Rd2pdf mypackage
sudo apt-get install texinfo
sudo apt-get install texinfo
R CMD Rd2pdf mypackage
install.packages("R CMD Rd2pdf mypackage")
install.packages("R CMD Rd2pdf mypackage")
install.packages("R CMD Rd2pdf mypackage")
updmap
install.packages("tinytex")
devtools::build_manual()
#' Creates a frequency distribution table and automated ogives plot
#' @export
#' @param lower_Class_limit numeric variable
#' @param upper_Class_limit numeric variable
#' @param freq numeric variable
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
R/basicfreqdist.R
R/basicfreqdist.R
load("~/freqdistributionandogives/.RData")
library(freqdistributionandogives)
cool=c(1:5)
typeof(cool)
cool=c(1:5);cool
typeof(cool)
library(freqdistributionandogives)
rmarkdown -> pandoc -> MIKTEX -> pdf
tlmgr search --global --file "/epstopdf.sty"
install.packages("R_HOME/share/texmf")
-manual.tex
devtools::install()
install.packages("devtools")
install.packages("usethis")
devtools::load_all()
`rm(list = c("basicfreqdist"))`
rm(list = c("basicfreqdist"))
devtools::load_all()
library(freqdistributionandogives)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(min(LTCF),max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
LOWERLIMIT=seq(0,40,by=10)
UPPERLIMIT=seq(10,50,by=10)
FREQ=c(12,15,16,18.11)
basicfreqdist(LOWERLIMIT,UPPERLIMIT,FREQ)
LOWERLIMIT=seq(0,40,by=10)
UPPERLIMIT=seq(10,50,by=10)
FREQ=c(12,15,16,18,11)
basicfreqdist(LOWERLIMIT,UPPERLIMIT,FREQ)
LOWERLIMIT=seq(0,40,by=10)
UPPERLIMIT=seq(10,50,by=10)
FREQ=c(30,20,40,28,15)
basicfreqdist(LOWERLIMIT,UPPERLIMIT,FREQ)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(0,max(LTCF)))
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
sprintf("CLASS WIDTH= %d",h)
}
LOWERLIMIT=seq(0,40,by=10)
UPPERLIMIT=seq(10,50,by=10)
FREQ=c(30,20,40,28,15)
basicfreqdist(LOWERLIMIT,UPPERLIMIT,FREQ)
basicfreqdist<-function(lower_Class_limit,upper_Class_limit,freq){
classwidth<- function(lower_Class_limit,upper_Class_limit){
h=upper_Class_limit[1]-lower_Class_limit[1]
return(h)
}
classmarks<- function(lower_Class_limit,upper_Class_limit){
x=(lower_Class_limit+upper_Class_limit)/2
return(x)
}
MorethanCF <- function(freq) {MoreCF={}
for (i in 1:length(freq)){MoreCF[i]<-sum(freq[i:length(freq)]);MoreCF}
return(MoreCF)
}
LessthanCF <- function(freq) {LessCF={}
for (j in 1:length(freq)){LessCF[j]<-sum(freq[1:j]);LessCF}
return(LessCF)
}
h=classwidth(lower_Class_limit,upper_Class_limit)
x=classmarks(lower_Class_limit,upper_Class_limit)
MTCF=MorethanCF(freq)
LTCF=LessthanCF(freq)
table=data.frame(LL=lower_Class_limit,UL=upper_Class_limit,classmark=x,freq=freq,morecf=MTCF,lesscf=LTCF)
print(table)
plot(main = "Less than and More Than Ogive Plots",upper_Class_limit,LTCF,col=4,type='l',pch=2,
xlab='Class intervals',ylab='Cummulative sum',xlim=range(min(lower_Class_limit),max(upper_Class_limit)),
ylim=range(0,max(LTCF)))
points(upper_Class_limit,LTCF,col=4,lwd=5,pch=2)
lines(lower_Class_limit,MTCF,pch=3,lwd=3,col=2)
points(lower_Class_limit,MTCF,pch=3,lwd=5,col=2)
sprintf("CLASS WIDTH= %d",h)
}
LOWERLIMIT=seq(0,40,by=10)
UPPERLIMIT=seq(10,50,by=10)
FREQ=c(30,20,40,28,15)
basicfreqdist(LOWERLIMIT,UPPERLIMIT,FREQ)
library(freqdistributionandogives)
library(freqdistributionandogives)
library(freqdistributionandogives)
